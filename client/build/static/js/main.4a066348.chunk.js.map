{"version":3,"sources":["utils/API.js","components/Jumbotron/index.js","components/Grid/index.js","components/SavedResult/index.js","pages/SaveBooks.js","components/SearchForm/index.js","components/SearchResult/index.js","pages/SearchBooks.js","pages/NoMatch.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["API","getGoogleSearchBooks","query","axios","get","getBooks","getBook","id","saveBook","savedBooks","post","deleteBook","delete","Jumbotron","react_default","a","createElement","className","Container","_ref","fluid","children","concat","Row","_ref2","Col","_ref3","size","split","map","join","SavedResult","props","length","savedbook","title","key","_id","src","image","alt","authors","description","onClick","handleDeleteButton","href","link","target","SaveBook","state","then","res","_this","componentDidMount","catch","err","console","log","_this2","this","setState","data","components_Jumbotron","components_SavedResult","Component","SearchForm","value","search","type","name","placeholder","onChange","handleInputChange","handleFormSubmit","SearchResult","books","book","author","event","handleSavedButton","SearchBooks","error","message","preventDefault","items","Error","results","result","volumeInfo","imageLinks","thumbnail","infoLink","filter","alert","components_SearchForm","components_SearchResult","NoMatch","role","aria-label","Nav","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","SaveBooks","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4a066348.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport default {\n    // Get book from google search \n    getGoogleSearchBooks: function(query) {\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\n    },\n\n    // Gets all books\n    getBooks: function () {\n        return axios.get(\"/api/books\");\n    },\n\n    // Gets the book with the given id\n    getBook: function (id) {\n        return axios.get(\"/api/books/\" + id);\n    },\n\n    // Saves a book to the database\n    saveBook: function (savedBooks) {\n        return axios.post(\"/api/books\", savedBooks);\n    },\n\n    // Deletes the book with the given id\n    deleteBook: function (id) {\n        return axios.delete(\"/api/books/\" + id);\n    }\n\n}","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron jumbotron-fluid d-flex align-items-center\">\n            <div className=\"container text-center\">\n             <h1>    (React) Google Book Search</h1>\n             <h1>    Search and Save Book of Interest </h1>\n            </div>\n        </div>\n    );\n}\n\nexport default Jumbotron;","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\"\nimport {Row, Col} from \"../Grid\"\n\nconst SavedResult = props => {\n    return (props.savedBooks.length === 0) ? (\n        <div className=\"card\">\n            <div className=\"card-body player\">\n                <div className=\"article\">\n                    <h3>Books that You Saved</h3>\n                </div>\n            </div>\n        </div>\n    ):(\n        <div className=\"card\">\n            <div className=\"card-body player\">\n                <div className=\"article\">\n                    <h3>Books that You Saved</h3>\n                    {props.savedBooks.map(savedbook => {\n                        return (\n                            <li className=\"saved-list list-group-item\">\n                                <Row className=\"SearchResult\" id={savedbook.title + \"Card\"} key={savedbook._id}>\n                                    {/* col-3 show image of the book */}\n                                    <Col size=\"2\" className=\"bookImage\">\n                                        <img src={savedbook.image} alt={savedbook.title} />\n                                    </Col>\n                                    <Col size=\"1\" className=\"emptyCol\"/>\n                                    {/* col-9 show information of the book */}\n                                    <Col size=\"9\" className=\"bookInfo\">\n                                        <Row>\n                                            <h2 className=\"bookTitle\">{savedbook.title}</h2>\n                                        </Row>\n                                        <Row>\n                                            <h3 className=\"bookAuthor\">{savedbook.authors}</h3>\n                                        </Row>\n                                        <Row>\n                                            <p className=\"bookDescription\">{savedbook.description}</p>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                                <br></br>\n                                <Row className=\"buttonDiv \">\n                                    <button className=\"deleteBook btn  btn-success\" id={savedbook._id} onClick={() => props.handleDeleteButton(savedbook._id)}>\n                                        Delete Book\n                                    </button>\n                                    <a href={savedbook.link} target=\"_blank\">\n                                        <button className=\"viewBook btn btn-success\">\n                                            View Book\n                                        </button>\n                                    </a>\n                                </Row>\n                            </li>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default SavedResult","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container} from \"../components/Grid\";\nimport SavedResult from \"../components/SavedResult\"\n\nclass SaveBook extends Component {\n    state = {\n        savedBooks: []\n    };\n\n    //when this component mounts, grab all books that were save to the database \n    componentDidMount() {\n        API.getBooks()\n            .then(res => this.setState({ savedBooks: res.data }))\n            .catch(err => console.log(err))\n    }\n\n    //function to remove book by id\n    handleDeleteButton = id => {\n        API.deleteBook(id)\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <Container fluid className=\"container\">\n                <Jumbotron />\n                <Container>\n                    <SavedResult savedBooks={this.state.savedBooks} handleDeleteButton={this.handleDeleteButton} />\n                </Container>\n            </Container>\n        )\n    }\n}\n\n\n\nexport default SaveBook ","import React from \"react\";\nimport \"./style.css\";\n\nconst SearchForm = props => {\n    return (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"BookSearchLabel\"><h3>Search For Book</h3></label>\n                <br></br>\n                <input className=\"col-12 form-control\"\n                    value={props.search}\n                    type=\"text\"\n                    name=\"searchBook\"\n                    placeholder=\"Game of Thrones\"\n                    onChange={props.handleInputChange}\n                />\n            </div>\n            <button type=\"submit\" className=\"submitBtn btn btn-primary\" onClick={props.handleFormSubmit}>\n                Submit\n            </button>\n        </form>\n    )\n}\n\n\n\nexport default SearchForm","import React from \"react\";\nimport \"./style.css\";\nimport {Row, Col} from \"../Grid\"\n\nconst SearchResult = props => {\n    return (props.books.length === 0) ? (\n        <div className=\"card\">\n            <div className=\"card-body player\">\n                <div className=\"article\">\n                    <h3>Search Results</h3>\n                </div>\n            </div>\n        </div>\n    ) : (\n            <div className=\"card\">\n                <div className=\"card-body player\">\n                    <div className=\"article\">\n                        <h3>Search Results</h3>\n                        {props.books.map(book => {\n                            return (\n                                <li className=\"search-list list-group-item\">\n                                    <Row className=\"SearchResult row\" id={book.title + \"Card\"} key={book._id}>\n                                        {/* col-3 show image of the book */}\n                                        <Col size=\"2\" className=\"bookImage\">\n                                            <img src={book.image} alt={book.title} />\n                                        </Col>\n                                        <Col size=\"1\" className=\"emptyCol\"/>\n                                        {/* col-9 show information of the book */}\n                                        <Col size=\"9\" className=\"bookInfo\">\n                                            <Row>\n                                                <h3 className=\"bookTitle\">{book.title}</h3>\n                                            </Row>\n                                            <Row>\n                                                <h4 className=\"bookAuthor\">{book.author}</h4>\n                                            </Row>\n                                            <Row>\n                                                <p className=\"bookDescription\">{book.description}</p>\n                                            </Row>\n                                        </Col>\n                                    </Row>\n                                    <br></br>\n                                    <Row className=\"buttonDiv \">\n                                        <button className=\"saveBook btn btn-primary\" id={book.id} onClick={(event) => props.handleSavedButton(event)}>\n                                            Save Book\n                                        </button>\n                                        <a href={book.link} target=\"_blank\">\n                                            <button className=\"viewBook btn btn-success\">\n                                                View Book\n                                        </button>\n                                        </a>\n                                    </Row>\n                                </li>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n}\nexport default SearchResult","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResult from \"../components/SearchResult\"\n\n\nclass SearchBooks extends Component {\n    //create state\n    state = {\n        search: \"\",\n        books: [],\n        error: \"\",\n        message: \"\"\n    };\n\n    //function to take value of what enter in the search bar\n    handleInputChange = event => {\n        this.setState({ search: event.target.value })\n    }\n\n    //function to control the submit button of the search form \n    handleFormSubmit = event => {\n        event.preventDefault();\n        // once it clicks it connects to the google book api with the search value\n        API.getGoogleSearchBooks(this.state.search)\n            .then(res => {\n                if (res.data.items === \"error\") {\n                    throw new Error(res.data.items);\n                }\n                else {\n                    // store response in a array\n                    let results = res.data.items\n                    //map through the array \n                    results = results.map(result => {\n                        //store each book information in a new object \n                        result = {\n                            key: result.id,\n                            id: result.id,\n                            title: result.volumeInfo.title,\n                            author: result.volumeInfo.authors,\n                            description: result.volumeInfo.description,\n                            image: result.volumeInfo.imageLinks.thumbnail,\n                            link: result.volumeInfo.infoLink\n                        }\n                        return result;\n                    })\n                    // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\n                    this.setState({ books: results, error: \"\" })\n                }\n            })\n            .catch(err => this.setState({ error: err.items }));\n    }\n\n    handleSavedButton = event => {\n        // console.log(event)\n        event.preventDefault();\n        console.log(this.state.books)\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\n        savedBooks = savedBooks[0];\n        API.saveBook(savedBooks)\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\n            .catch(err => console.log(err))\n    }\n    render() {\n        return (\n            <Container fluid>\n                <Jumbotron>\n                    <h1 className=\"text-white\"> GoogleBook</h1>\n                </Jumbotron>\n                <Container>\n                    <Row>\n                        <Col size=\"12\">\n                            <SearchForm\n                                handleFormSubmit={this.handleFormSubmit}\n                                handleInputChange={this.handleInputChange}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n                <br></br>\n                <Container>\n                    <SearchResult books={this.state.books} handleSavedButton={this.handleSavedButton} />\n                </Container>\n            </Container>\n        )\n    }\n\n\n}\n\nexport default SearchBooks","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1 className=\"text-white\">404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\n\nfunction Nav() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-primary \">\n            <a className=\"navbar-brand\" href=\"/\">\n                <h2 className=\"text-white\">Google Books</h2>\n            </a>\n            <div id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\" id=\"home\">\n                        <a className=\"nav-link\" href=\"/\"><button type=\"button\" className=\"btn\">Search</button></a>\n                    </li>\n                    <li className=\"nav-item\" id=\"report\">\n                        <a className=\"nav-link\" href=\"/saved\"><button type=\"button\" className=\"btn\">Saved</button></a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Nav;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SaveBooks from \"./pages/SaveBooks\";\nimport SearchBooks from \"./pages/SearchBooks\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport \"./App.css\"\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={SearchBooks} />\n          <Route exact path=\"/saved\" component={SaveBooks} />\n          <Route exact path=\"/saved/:id\" component={SaveBooks} />\n          <Route component={NoMatch} /> \n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}